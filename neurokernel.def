# Copyright (c) 2015-2016, Gregory M. Kurtzer. All rights reserved.
# 
# "Singularity" Copyright (c) 2016, The Regents of the University of California,
# through Lawrence Berkeley National Laboratory (subject to receipt of any
# required approvals from the U.S. Dept. of Energy).  All rights reserved.

BootStrap: debootstrap
OSVersion: trusty
MirrorURL: http://us.archive.ubuntu.com/ubuntu/


%runscript
    export PATH="/miniconda/bin:${PATH}"
    export LD_LIBRARY_PATH=/usr/local/cuda/lib64:/usr/local/nvidia:${LD_LIBRARY_PATH}
    echo "No script to execute"

%post

    #export PATH="/root/miniconda/bin:${PATH}"
    export LD_LIBRARY_PATH=/usr/local/cuda/lib64:/usr/local/NVIDIA-Linux-x86_64-352.63:/usr/local/nvidia/lib64:/usr/local/nvidia:${LD_LIBRARY_PATH}

    sed -i 's/$/ universe/' /etc/apt/sources.list
    apt-get update 
    apt-get -y --force-yes install vim \
                                   curl \
                                   libfreetype6-dev \
                                   libpng12-dev \
                                   libzmq3-dev \
                                   python-numpy \
                                   python-pip \
                                   python-scipy && \
                              apt-get clean

    echo "Here we are installing software and other dependencies for the container!"

    echo "deb http://us.archive.ubuntu.com/ubuntu/ trusty universe" >> /etc/apt/sources.list
    echo "deb-src http://us.archive.ubuntu.com/ubuntu/ trusty universe" >> /etc/apt/sources.list
    echo "deb http://us.archive.ubuntu.com/ubuntu/ trusty-updates universe" >> /etc/apt/sources.list
    echo "deb-src http://us.archive.ubuntu.com/ubuntu/ trusty-updates universe" >> /etc/apt/sources.list

    echo "deb http://us.archive.ubuntu.com/ubuntu/ trusty main restricted" >> /etc/apt/sources.list
    echo "deb-src http://us.archive.ubuntu.com/ubuntu/ trusty main restricted" >> /etc/apt/sources.list
    echo "deb http://us.archive.ubuntu.com/ubuntu/ trusty-updates main restricted" >> /etc/apt/sources.list
    echo "deb-src http://us.archive.ubuntu.com/ubuntu/ trusty-updates main restricted" >> /etc/apt/sources.list

    echo "deb http://us.archive.ubuntu.com/ubuntu/ trusty universe" >> /etc/apt/sources.list
    echo "deb-src http://us.archive.ubuntu.com/ubuntu/ trusty universe" >> /etc/apt/sources.list
    echo "deb http://us.archive.ubuntu.com/ubuntu/ trusty-updates universe" >> /etc/apt/sources.list
    echo "deb-src http://us.archive.ubuntu.com/ubuntu/ trusty-updates universe" >> /etc/apt/sources.list

    echo "deb http://us.archive.ubuntu.com/ubuntu/ trusty multiverse" >> /etc/apt/sources.list
    echo "deb-src http://us.archive.ubuntu.com/ubuntu/ trusty multiverse" >> /etc/apt/sources.list
    echo "deb http://us.archive.ubuntu.com/ubuntu/ trusty-updates multiverse" >> /etc/apt/sources.list
    echo "deb-src http://us.archive.ubuntu.com/ubuntu/ trusty-updates multiverse" >> /etc/apt/sources.list

    echo "deb http://us.archive.ubuntu.com/ubuntu/ trusty-backports main restricted universe multiverse" >> /etc/apt/sources.list
    echo "deb-src http://us.archive.ubuntu.com/ubuntu/ trusty-backports main restricted universe multiverse" >> /etc/apt/sources.list

    echo "deb http://security.ubuntu.com/ubuntu trusty-security main restricted" >> /etc/apt/sources.list
    echo "deb-src http://security.ubuntu.com/ubuntu trusty-security main restricted" >> /etc/apt/sources.list
    echo "deb http://security.ubuntu.com/ubuntu trusty-security universe" >> /etc/apt/sources.list
    echo "deb-src http://security.ubuntu.com/ubuntu trusty-security universe" >> /etc/apt/sources.list
    echo "deb http://security.ubuntu.com/ubuntu trusty-security multiverse" >> /etc/apt/sources.list
    echo "deb-src http://security.ubuntu.com/ubuntu trusty-security multiverse" >> /etc/apt/sources.list

    echo "deb http://extras.ubuntu.com/ubuntu trusty main" >> /etc/apt/sources.list
    echo "deb-src http://extras.ubuntu.com/ubuntu trusty main" >> /etc/apt/sources.list
    echo "deb http://archive.ubuntu.com/ubuntu/ trusty main universe" >> /etc/apt/sources.list


    apt-get -y update
    apt-get -y install wget

 wget -qO - http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64/7fa2af80.pub | apt-key add -

  apt-get -y update
    apt-get -y install git 
    apt-get -y install vim

    apt-get -y install linux-source build-essential 
    apt-get -y install linux-headers-`uname -r`

    apt-get -y install wget libibverbs1
    apt-get -y install libnuma1 
    apt-get -y install libpmi0 
    apt-get -y install libslurm26 
    apt-get -y install libtorque2 
    apt-get -y install libhwloc-dev 
    apt-get -y install git 
    apt-get -y install libffi-dev 
    apt-get -y install libssl-dev

    wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh
    bash miniconda.sh -b -p miniconda
    rm miniconda.sh

    export PATH="/miniconda/bin:${PATH}"
    conda config --add channels https://conda.binstar.org/neurokernel/channel/ubuntu1404
    conda install -y neurokernel_deps

    wget https://bootstrap.pypa.io/get-pip.py
    python get-pip.py
    pip install ipython

    conda install pycuda=2015.1.3=np110py27_cuda75_0

    # clone modified neurokernel, with interface eth1, required if docker is causing issues.
    git clone https://github.com/AdamRTomkins/neurokernel.git
    cd neurokernel
    git fetch && git checkout feature/singularity && python setup.py install
    cd ../

    git clone https://github.com/neurokernel/neurodriver.git
    cd neurodriver
    git fetch && python setup.py install
    cd examples/generic/data/
    python gen_generic_lpu.py
    cd ../../../../

    # Add executable permissions to miniconda
    chmod -R ugo+rwx /miniconda


